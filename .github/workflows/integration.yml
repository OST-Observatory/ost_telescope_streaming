name: Integration

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  integration:
    continue-on-error: true
    runs-on: ubuntu-latest
    env:
      OST_CAMERA_CONNECTED: '0'
    steps:
      - uses: actions/checkout@v4
      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest-regressions
      - name: Run integration tests (no hardware)
        run: |
          pytest -q -m integration

  hardware:
    continue-on-error: true
    runs-on: windows-latest
    env:
      OST_CAMERA_CONNECTED: '1'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
          if (Test-Path requirements-dev.txt) { pip install -r requirements-dev.txt }
      - name: Run hardware integration tests
        run: |
          pytest -q -m "integration and hardware"
